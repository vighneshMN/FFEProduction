<apex:page showHeader="false" standardStylesheets="false" controller="MenteePortal_Controller" action="{!checkUserAuth}">
    
     <html>
        <head>
            <c:MentorshipScripts />
            <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1" />
            <style>
                input {
                width: 100%;
                padding: 12px;
                border: 1px solid #ccc;
                border-radius: 4px;
                box-sizing: border-box;
                margin-top: 6px;
                margin-bottom: 16px;
                }
                
                /* Style the submit button */
                input[type=submit] {
                background-color: #04AA6D;
                color: white;
                }
                
                /* Style the container for inputs */
                .container {
                background-color: #f1f1f1;
                padding: 20px;
                width:60%;
                }
                
                /* The message box is shown when the user clicks on the password field */
                #message {
                display:none;
                background: #f1f1f1;
                color: #000;
                position: relative;
                padding: 20px;
                margin-top: 10px;
                }
                
                #message p {
                padding: 10px 35px;
                font-size: 18px;
                }
                
                /* Add a green text color and a checkmark when the requirements are right */
                .valid {
                color: green;
                }
                
                .valid:before {
                position: relative;
                left: -35px;
                content: "✔";
                }
                
                /* Add a red text color and an "x" when the requirements are wrong */
                .invalid {
                color: red;
                }
                
                .invalid:before {
                position: relative;
                left: -35px;
                content: "✖";
                }
                .header{
                text-align:center;
                }
                @media screen and (max-width:450px){
                	.container{
                		width:100%;
                		margin:unset;
                	}
                }
            </style>
         </head>
         <body ng-controller="mentorshipCtrl"  ng-app="mentorshipApp">
             <div class="loadingSection" id="spinner" ng-if="showSpinner">
                 <div class="loadingBackground"></div>
                 <!--div>
                     <apex:image url="{!$Resource.loading}" styleClass="loading" />
                 </div-->
             </div>
             <div class="header">
                 <h3>Reset Password</h3>
                 <p>Enter new password.</p>   
             </div>

             <div class="container">
                 <form action="">
                     
                     <!--label for="psw">Password</label-->
                     <input type="password" id="psw" name="psw" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters" required="" ng-model="NewPassword"/>
                     
                     <input type="submit" value="Submit" ng-click="submit()"/>
                 </form>
             </div>
             
             <div id="message" class="container">
                 <h3>Password must contain the following:</h3>
                 <p id="letter" class="invalid">A <b>lowercase</b> letter</p>
                 <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
                 <p id="number" class="invalid">A <b>number</b></p>
                 <p id="length" class="invalid">Minimum <b>8 characters</b></p>
             </div>
             
<script>
var myInput = document.getElementById("psw");
var letter = document.getElementById("letter");
var capital = document.getElementById("capital");
var number = document.getElementById("number");
var length = document.getElementById("length");

// When the user clicks on the password field, show the message box
myInput.onfocus = function() {
  document.getElementById("message").style.display = "block";
}

// When the user clicks outside of the password field, hide the message box
myInput.onblur = function() {
  document.getElementById("message").style.display = "none";
}

// When the user starts to type something inside the password field
myInput.onkeyup = function() {
  // Validate lowercase letters
  var lowerCaseLetters = /[a-z]/g;
  if(myInput.value.match(lowerCaseLetters)) {  
    letter.classList.remove("invalid");
    letter.classList.add("valid");
  } else {
    letter.classList.remove("valid");
    letter.classList.add("invalid");
  }
  
  // Validate capital letters
  var upperCaseLetters = /[A-Z]/g;
  if(myInput.value.match(upperCaseLetters)) {  
    capital.classList.remove("invalid");
    capital.classList.add("valid");
  } else {
    capital.classList.remove("valid");
    capital.classList.add("invalid");
  }

  // Validate numbers
  var numbers = /[0-9]/g;
  if(myInput.value.match(numbers)) {  
    number.classList.remove("invalid");
    number.classList.add("valid");
  } else {
    number.classList.remove("valid");
    number.classList.add("invalid");
  }
  
  // Validate length
  if(myInput.value.length >= 8) {
    length.classList.remove("invalid");
    length.classList.add("valid");
  } else {
    length.classList.remove("valid");
    length.classList.add("invalid");
  }
}

			var app = angular.module('mentorshipApp', []);
            app.controller('mentorshipCtrl', function($scope) {
                var mentorId = '{!$CurrentPage.parameters.Id}';
                $scope.NewPassword;
                 $scope.showSpinner = false;
                 $scope.submit = function () {
                     debugger;
                     if($scope.NewPassword == undefined) {
                         Swal.fire({
                             icon: 'error',
                             title: 'Oops...',
                             text: 'Please enter valid EmailId',
                         })
                         return;
                     }
                     $scope.showSpinner = true;
                     
                     Visualforce.remoting.Manager.invokeAction(
                         '{!$RemoteAction.MenteePortal_Controller.resetPassword}',
                         mentorId,$scope.NewPassword,
                         function (result, event) {
                             $scope.showSpinner = false;
                             if (event.status) {
                               Swal.fire(
                                '',
                                'Password reset successfully!',
                                'success'
                            )
                            let mainURL = window.location.origin + '/mentorship';
                                 window.location.replace(mainURL + '/MentorPortal?id='); //+ $scope.mentorDetail.Login_Hash_Code__c
   
                                 
                                 
                             } else {
                                 Swal.fire({
                                     title: 'Error!',
                                     text: 'You have already set your password please login',
                                     icon: 'error',
                                 })
                             }
                         });
                 }
                 
             })
</script>

</body>
    </html>
</apex:page>